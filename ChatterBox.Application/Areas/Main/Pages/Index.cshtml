@page

@using ChatterBox.Interfaces.Entities
@using ChatterBox.Services.Extensions
@model ChatterBox.Application.Areas.Main.Pages.IndexModel;

@{
    var currentUser = await Model.GetCurrentUserAsync();
    var targetUser = currentUser; // (await Model.GetCurrentUserAsync());
}

<link href="~/css/main.css" rel="stylesheet"/>

<div class="d-flex justify-content-center w-100 mt-4">
    <div class="d-flex chat-container">
        <div class="p-0 groups">
            <div class="group-top align-center">
                <button type="button" class="btn btn-secondary rounded-circle users-btn" id="toggle-users">
                    <i class="fa-solid fa-list"></i>
                </button>
            </div>

            <div class="group-middle">
                @foreach (var group in Model.GetGroups())
                {
                    <div class="group align-column-center">
                        <button type="button" class="btn btn-secondary rounded-circle users-btn">
                            <i class="fa-solid fa-layer-group"></i>
                        </button>
                        @group.Name
                    </div>
                }
            </div>

            <div class="group-bottom align-center">
                <button type="button" class="btn btn-secondary rounded-circle users-btn">
                    <i class="fa-solid fa-user-group"></i>
                </button>
            </div>
        </div>

        <div class="p-0 users" id="users-container">
            <div class="users-top d-flex flex-row justify-content-center">
                <div class="input-group search">
                    <input type="text" class="form-control" placeholder="Search..." id="user-search-input">
                </div>
            </div>

            <div class="users-middle">
                <ul class="list-not-styled chat-list mt-2 mb-0">
                    @foreach (var user in Model.GetUsers())
                    {
                        <li class="d-flex flex-row">
                            <button class="w-100 d-flex user" data-username="@user.UserName">
                                <img src="~/img/profile-circle.svg" alt="avatar" class="profile-circle-img">

                                <div class="d-flex flex-column justify-content-center">
                                    <div class="justify-content-start">
                                        <i class="fa fa-circle @(user.Online ? "online" : "offline")"></i>

                                        @user.UserName
                                    </div>
                                </div>
                            </button>
                        </li>
                    }
                </ul>
            </div>

            <div class="align-center users-bottom">
                <div class="d-flex w-75">
                    <img src="~/img/profile-circle.svg" alt="avatar" class="profile-circle-img">

                    <div class="d-flex flex-column justify-content-center">
                        <div class="justify-content-start">
                            <i class="fa fa-circle @(Model.IsOnline(currentUser) ? "online" : "offline")"></i>

                            @currentUser.UserName
                        </div>
                    </div>
                </div>

                <a href="/Identity/Account/Manage">
                    <button type="button" class="btn btn-secondary rounded-circle settings-btn align-center">
                        <i class="fa-solid fa-gear"></i>
                    </button>
                </a>
            </div>
        </div>

        <div class="p-0 chat">
            <div class="chat-top align-center-end">
                <div class="d-flex flex-row m-2">
                    <img src="~/img/profile-circle.svg" alt="avaStar" class="profile-circle-img">

                    <div class="d-flex flex-column justify-content-center">
                        <div class="justify-content-start">
                            <i class="fa fa-circle @(Model.IsOnline(targetUser) ? "online" : "offline")"></i>

                            @targetUser.UserName
                        </div>
                    </div>
                </div>
            </div>

            <div class="chat-middle align-center">
                <ul id="messages" class="align-column-center mt-3 user-list chat-texts">
                    @foreach (var message in Model.GetChatMessages())
                    {
                        @if (message.SenderId == currentUser.Id)
                        {
                            <li class="clearfix w-75">
                                <div>
                                    <div class="message other-message w-100">@message.Text</div>

                                    <div class="message-data w-100 align-center-end">
                                        <span class="message-data-time">@message.DateSent.ToString("h:mm tt")</span>
                                    </div>
                                </div>
                            </li>
                        }
                        else
                        {
                            <li class="clearfix w-75">
                                <div class="message my-message w-100">@message.Text</div>

                                <div class="message-data">
                                    <span class="message-data-time">@message.DateSent.ToString("h:mm tt")</span>
                                </div>
                            </li>
                        }
                    }
                </ul>
            </div>

            <div class="chat-bottom align-center">
                <div class="input-group mb-0 w-75">
                    <input type="text" id="inputMessage" class="form-control" placeholder="Write...">

                    <button id="pickEmote" class="btn fa-solid fa-smile-beam fa-xl"></button>

                    <button id="sendButton" class="btn btn-primary">Send</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/lib/signalr/signalr.js"></script>
<script src="~/js/chatHandler.js"></script>
<script src="~/js/emoteHandler.js"></script>
<script src="~/js/userListClose.js"></script>
<script src="~/js/userSearch.js"></script>